input {
    jdbc {
        jdbc_connection_string => "jdbc:mysql://172.16.30.14:3366/video"
        jdbc_user => "logstashusr"
        jdbc_password => "00b64a0abowt284fe8d2fcbbba181"
        jdbc_validate_connection => true
        jdbc_driver_library => "/data/app/logstash/lib/mysql-connector-java-5.1.18-bin.jar"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        statement => "select t.myid, t.uid, t.mydate, IFNULL(p.peruidpaymoney,0) as peruidpaymoney, IFNULL(p.peruidpaycount,0) as peruidpaycount, IFNULL(p.peruidpoints,0) as peruidpoints, t.maxperonline, t.avgperonline, t.sumperonline, t.uroomfrequency from (select concat(uid,'-',unix_timestamp(date(created))) as myid, uid, unix_timestamp(created) as mydate, sum(round(points/10)) as peruidpaymoney, count(1) as peruidpaycount, sum(points) as peruidpoints from video.video_recharge where pay_type in (1,4) and pay_status = 1 and created >= (select min(in_time) from video.video_exit_room) group by uid, date(created)) as p right join (select concat(uid,'-',unix_timestamp(date(in_time))) as myid, uid, unix_timestamp(date(in_time)) as mydate, max(duration) as maxperonline, avg(duration) as avgperonline, sum(duration) as sumperonline, count(1) as uroomfrequency from video.video_exit_room group by uid, date(in_time)) as t on p.myid = t.myid"
        #statement => "select t.myid, t.uid, t.mydate, IFNULL(p.peruidpaymoney,0) as peruidpaymoney, IFNULL(p.peruidpaycount,0) as peruidpaycount, IFNULL(p.peruidpoints,0) as peruidpoints, t.maxperonline, t.avgperonline, t.sumperonline, t.uroomfrequency from (select concat(uid,'-',unix_timestamp(date(created))) as myid, uid, unix_timestamp(created) as mydate, sum(round(points/10)) as peruidpaymoney, count(1) as peruidpaycount, sum(points) as peruidpoints from video.video_recharge where pay_type in (1,4) and pay_status = 1 and created >= (select min(in_time) from archive_db.video_exit_room201506) group by uid, date(created)) as p right join (select concat(uid,'-',unix_timestamp(date(in_time))) as myid, uid, unix_timestamp(date(in_time)) as mydate, max(duration) as maxperonline, avg(duration) as avgperonline, sum(duration) as sumperonline, count(1) as uroomfrequency from archive_db.video_exit_room201506 group by uid, date(in_time)) as t on p.myid = t.myid"
        #statement => "select t.myid, t.uid, t.mydate, IFNULL(p.peruidpaymoney,0) as peruidpaymoney, IFNULL(p.peruidpaycount,0) as peruidpaycount, IFNULL(p.peruidpoints,0) as peruidpoints, t.maxperonline, t.avgperonline, t.sumperonline, t.uroomfrequency from (select concat(uid,'-',unix_timestamp(date(ctime))) as myid, uid, unix_timestamp(ctime) as mydate, sum(paymoney) as peruidpaymoney, count(1) as peruidpaycount, sum(points) as peruidpoints from video.video_charge_list where del = 0 and status = 2 and ctime >= (select min(in_time) from archive_db.video_exit_room201506) group by uid, date(ttime)) as p right join (select concat(uid,'-',unix_timestamp(date(in_time))) as myid, uid, unix_timestamp(date(in_time)) as mydate, max(duration) as maxperonline, avg(duration) as avgperonline, sum(duration) as sumperonline, count(1) as uroomfrequency from archive_db.video_exit_room201506 group by uid, date(in_time)) as t on p.myid = t.myid"
    }
}

filter {
  date {
    #match => [ "ttime", "YYYY-MM-dd HH:mm:ss +0800" ]
    match => [ "mydate", "UNIX" ]
    remove_field => [ "mydate" ]
  }
}
output {
    elasticsearch {
        host => "172.16.30.26"
        port => "9200"
        workers => 12
        cluster => "elk_DB"
        protocol => "http"
        index => "vstat"
        document_type => "peruidall-daily"
        document_id => "%{myid}"
        template => "/data/app/logstash/conf/mystat-template.json"
        template_overwrite => "true"
        manage_template => "false"
    }   
  #stdout { codec => json_lines }
}
